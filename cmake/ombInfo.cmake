# Print out the discovered paths
include(CMakePrintHelpers)

# Build configuration details
message(STATUS "System information")
list(APPEND CMAKE_MESSAGE_INDENT "  ")
cmake_print_variables(CMAKE_SYSTEM)
cmake_print_variables(CMAKE_SYSTEM_PROCESSOR)
cmake_print_variables(CMAKE_SYSTEM_VERSION)
cmake_print_variables(CMAKE_LIBRARY_ARCHITECTURE)
cmake_print_variables(CMAKE_OBJECT_PATH_MAX)
list(POP_BACK CMAKE_MESSAGE_INDENT)

message(STATUS "Build configuration information")
list(APPEND CMAKE_MESSAGE_INDENT "  ")
cmake_print_variables(CMAKE_VERSION)
cmake_print_variables(CMAKE_PREFIX_PATH)
cmake_print_variables(CMAKE_BUILD_TYPE)
cmake_print_variables(CMAKE_DEFAULT_BUILD_TYPE)
# Get the upper case version of the build-type (that
# will be what is used internally anyway)
string(TOUPPER ${CMAKE_BUILD_TYPE} upper_CMAKE_BUILD_TYPE)
cmake_print_variables(CMAKE_INSTALL_PREFIX)
cmake_print_variables(CMAKE_INSTALL_RPATH)
cmake_print_variables(CMAKE_INSTALL_RPATH_USE_LINK_PATH)
cmake_print_variables(CMAKE_INTERPROCEDURAL_OPTIMIZATION)
cmake_print_variables(CMAKE_POSITION_INDEPENDENT_CODE)
cmake_print_variables(CMAKE_BUILD_RPATH)
cmake_print_variables(CMAKE_BUILD_WITH_INSTALL_RPATH)
if( APPLE )
  cmake_print_variables(APPLE)
  cmake_print_variables(CMAKE_OSX_ARCHITECTURES)
  cmake_print_variables(CMAKE_OSX_DEPLOYMENT_TARGET)
  cmake_print_variables(CMAKE_APPLE_ARCH_SYSROOTS)
  cmake_print_variables(CMAKE_OSX_SYSROOT_PATH)
elseif( WIN32 )
  cmake_print_variables(WIN32)
endif()
list(POP_BACK CMAKE_MESSAGE_INDENT)

message(STATUS "Compilation flags")
list(APPEND CMAKE_MESSAGE_INDENT "  ")

set(FC $ENV{FC})
set(FFLAGS $ENV{FFLAGS})
cmake_print_variables(FC)
cmake_print_variables(FFLAGS)
cmake_print_variables(CMAKE_Fortran_COMPILER)
cmake_print_variables(CMAKE_Fortran_FLAGS)
cmake_print_variables(CMAKE_Fortran_FLAGS_${upper_CMAKE_BUILD_TYPE})
cmake_print_variables(CMAKE_Fortran_MODULE_DIRECTORY)
cmake_print_variables(CMAKE_Fortran_MODDIR_DEFAULT)
cmake_print_variables(CMAKE_Fortran_MODDIR_FLAG)
cmake_print_variables(CMAKE_Fortran_MODOUT_FLAG)
cmake_print_variables(CMAKE_Fortran_STANDARD)

if(FALSE)
set(CC $ENV{CC})
set(CFLAGS $ENV{CFLAGS})
cmake_print_variables(CC)
cmake_print_variables(CFLAGS)
cmake_print_variables(CMAKE_C_COMPILER)
cmake_print_variables(CMAKE_C_FLAGS)
cmake_print_variables(CMAKE_C_FLAGS_${upper_CMAKE_BUILD_TYPE})
cmake_print_variables(CMAKE_C_STANDARD)

set(CXX $ENV{CXX})
set(CXXFLAGS $ENV{CXXFLAGS})
cmake_print_variables(CXX)
cmake_print_variables(CXXFLAGS)
cmake_print_variables(CMAKE_CXX_COMPILER)
cmake_print_variables(CMAKE_CXX_FLAGS)
cmake_print_variables(CMAKE_CXX_FLAGS_${upper_CMAKE_BUILD_TYPE})
cmake_print_variables(CMAKE_CXX_STANDARD)
endif()

list(POP_BACK CMAKE_MESSAGE_INDENT)
